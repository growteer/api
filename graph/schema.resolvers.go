package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.60

import (
	"context"
	"fmt"

	"github.com/growteer/api/graph/model"
)

// GenerateNonce is the resolver for the generateNonce field.
func (r *mutationResolver) GenerateNonce(ctx context.Context, input model.NonceParams) (*model.Nonce, error) {
	if input.Address == "" {
		return nil, fmt.Errorf("bad request")
	}

	nonce, err := r.nonceService.GenerateNonce(ctx, input.Address)
	if err != nil{
		return nil, err
	}
	
	return &model.Nonce{Value: nonce}, nil
}

// Nonce is the resolver for the nonce field.
func (r *queryResolver) Nonce(ctx context.Context, address string) (*model.Nonce, error) {
	panic(fmt.Errorf("not implemented: Nonce - nonce"))
}

// Nonces is the resolver for the nonces field.
func (r *queryResolver) Nonces(ctx context.Context) ([]*model.Nonce, error) {
	panic(fmt.Errorf("not implemented: Nonces - nonces"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
}
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	panic(fmt.Errorf("not implemented: Todos - todos"))
}
*/
