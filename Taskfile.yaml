version: "3"

vars:
  BIN: "{{ .TASKFILE_DIR }}/bin"
  GOBIN:
    sh: echo $GOPATH/bin
  REPORTS: "{{ .TASKFILE_DIR }}/reports"
  VERSION_DELVE: latest
  VERSION_GO_JUNIT_REPORT: v2.1.0
  VERSION_GOCOV: v1.1.0
  VERSION_GOCOV_XML: v1.1.0
  VERSION_GOLANGCI_LINT: v1.63.4
  VERSION_MOCKERY: v2.52.1
  TESTABLE_DIRS:
    - ./internal/...
    - ./pkg/...

tasks:
  db:
    cmd: |
      docker run -it -p 27017:27017 \
        -e MONGO_INITDB_ROOT_USERNAME=admin \
        -e MONGO_INITDB_ROOT_PASSWORD=password \
        mongo:latest

  run:
    cmds:
      - go run ./cmd
    env:
      ALLOWED_ORIGINS: "http://localhost:5173"
      HTTP_PORT: 8080
      MONGO_HOST: localhost
      MONGO_PORT: 27017
      MONGO_USER: admin
      MONGO_PASSWORD: password
      MONGO_DB_NAME: api_service
      MONGO_SSL: false
      JWT_SECRET: baconkilbasa
      SESSION_TTL_MINUTES: 60

  debug:
    cmd: |
      go run github.com/go-delve/delve/cmd/dlv@{{ .VERSION_DELVE }} debug \
        ./cmd \
        --headless \
        --listen=:2345 \
        --api-version=2

  build:
    cmds:
      - cmd: |
          go build \
            -tags release \
            -o {{.BIN}}/main \
            ./cmd;
    env:
      CGO_ENABLED: 0
      GOOS: linux
      GOARCH: amd64

  gen-api:
    cmd: go run github.com/99designs/gqlgen generate

  gen-mocks:
    cmds:
      - rm -rf ./testing/mocks
      - go run github.com/vektra/mockery/v2@{{ .VERSION_MOCKERY }}

  lint:
    cmd: |
      go run github.com/golangci/golangci-lint/cmd/golangci-lint@{{ .VERSION_GOLANGCI_LINT }} run

  test:
    cmd: go test ./... -v

  test-with-reports:
    cmds:
      - task: test-tools
      - mkdir -p {{ .REPORTS }}
      - cmd: |
          go test {{ join " " .TESTABLE_DIRS }} -v \
            -covermode=atomic \
            -coverprofile={{ .COVERAGE_PROFILE }} \
            -json > {{ .REPORTS }}/test-report.json
      - cmd: |
          {{ .GOBIN }}/go-junit-report \
            < {{ .REPORTS }}/test-report.json \
            > {{ .REPORTS }}/junit-report.xml
      - cmd: |
          go tool cover \
            -html={{ .COVERAGE_PROFILE }} \
            -o {{ .REPORTS }}/coverage.html
    vars:
      COVERAGE_PROFILE: "{{ .REPORTS }}/coverage.out"

  test-tools:
    cmds:
      - go install github.com/jstemmer/go-junit-report/v2@{{ .VERSION_GO_JUNIT_REPORT }}
      - go install github.com/axw/gocov/gocov@{{ .VERSION_GOCOV }}
      - go install github.com/AlekSi/gocov-xml@{{ .VERSION_GOCOV_XML }}
